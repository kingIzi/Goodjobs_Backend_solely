"""
Django settings for goodjobs project.

Generated by 'django-admin startproject' using Django 4.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""
import os
from pathlib import Path
import sentry_sdk
import dj_database_url

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
#SECRET_KEY = 'django-insecure-#9os=eg^!(9eo506j_1gk!q-vs8z3++!e@#l%qb!ocxd-&k_@p'
SECRET_KEY = os.environ.get('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get('DEBUG', 'False').lower() == 'true'
database_url = os.environ.get('DATABASE_URL')
ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'daphne',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'api',
    'rest_framework.authtoken',
    'corsheaders',
    'storages',
    'myauthentication',
    'subscription',
    'jobpost',
    'tips',
    'paymentorder',
    'firebaseapp',
    'analytics'
]

AUTH_USER_MODEL = 'myauthentication.CustomUser'
AUTHENTICATION_BACKENDS = [
    'myauthentication.backend.CustomPhoneBackend',
    'django.contrib.auth.backends.ModelBackend',
]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',  # <-- And here
        'rest_framework.authentication.SessionAuthentication',
    ],
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_CREDENTIALS = True
CORS_ALLOW_HEADERS = ['*']
CORS_ALLOWED_ORIGINS = [
    "http://54.89.58.119",
    "http://192.168.1.125",
    "https://goodjobs.sparetz.com",
    "https://goodjobs.sparetz.com",
]
CSRF_TRUSTED_ORIGINS = [

    "http://54.89.58.119/",
    "http://192.168.1.125",
    "https://goodjobs.sparetz.com",
    "http://goodjobs.sparetz.com/",
    "http://localhost:8004",
    "http://127.0.0.1:8004",
    'http://localhost',
    "http://127.0.0.1",
]

ASGI_APPLICATION = 'goodjobs.asgi.application'

CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels_redis.core.RedisChannelLayer",
        "CONFIG": {
            # Use your Redis server configuration here
            "hosts": [("localhost", 6379)],
        },
    },
}

ROOT_URLCONF = 'goodjobs.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'goodjobs.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'mssql',
        'NAME': 'WebApplication1.Data.AppDatabaseContext',
        'USER': 'sa',
        'PASSWORD': 'ngaiNdeTengai',
        'HOST': 'DESKTOP-LJVCIVI\\SQLEXPRESS',
        #'PORT': '',
        'OPTIONS': {
            'driver': 'ODBC Driver 17 for SQL Server',  
            'Trusted_Connection': 'yes'
        },
    }
}

#DATABASES["default"] = dj_database_url.parse("postgresql://pretty_goodjobs_user:orGtyX5PX9eZlsrmO5GTzf5wtGpPwGnb@dpg-d02rrimuk2gs73epgk5g-a.oregon-postgres.render.com/pretty_goodjobs")
DATABASES["default"] = dj_database_url.parse(database_url)

# postgresql://pretty_goodjobs_user:orGtyX5PX9eZlsrmO5GTzf5wtGpPwGnb@dpg-d02rrimuk2gs73epgk5g-a.oregon-postgres.render.com/pretty_goodjobs

# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = os.path.join(BASE_DIR, "static")
# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
# AWS MEDIA FILE STORAGE
AWS_ACCESS_KEY_ID = 'AKIAZ3NAQ3IPJPLBTGHG'
AWS_SECRET_ACCESS_KEY = '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'
AWS_STORAGE_BUCKET_NAME = 'good-jobs-bucket'
AWS_S3_REGION_NAME = 'us-east-1'
# AWS_S3_SIGNATURE_VERSION = 's3v4'
AWS_S3_FILE_OVERWRITE = False
AWS_DEFAULT_ACL = None
DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'

# AZAMPAY
AZAMPAY_CLIENT_ID = ""
AZAMPAY_SECRET_KEY = ""
AZAMPAY_APP_NAME = "GoodJob"
AZAMPAY_SANDBOX_CLIENT_ID = ""
AZAMPAY_SANDBOX_SECRET_KEY = ""
AZAMPAY_SANDBOX_APP_NAME = ""

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'file': {
            'level': 'ERROR',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': 'django_errors.log',
            'maxBytes': 1024 * 1024 * 5,  # 5 MB
            'backupCount': 5,
        },
        'celery_notification_file': {
            'level': 'DEBUG',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': 'celery_notifications.log',
            'maxBytes': 1024 * 1024 * 5,  # 5 MB
            'backupCount': 5,
        },
        'payments_log_file': {
            'level': 'DEBUG',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': 'payments.log',
            'maxBytes': 1024 * 1024 * 5,  # 5 MB
            'backupCount': 5,
        },
    },
    'loggers': {
        'django': {
            'handlers': ['file'],
            'level': 'ERROR',
            'propagate': True,
        },
        'celery_notification': {
            'handlers': ['celery_notification_file'],
            'level': 'DEBUG',
            'propagate': False,
        },
        'payments_log': {
            'handlers': ['payments_log_file'],
            'level': 'DEBUG',
            'propagate': False,
        },
    },
}
# Celery settings
CELERY_BROKER_URL = 'redis://localhost:6379/0'
CELERY_BROKER_CONNECTION_RETRY_ON_STARTUP = True


